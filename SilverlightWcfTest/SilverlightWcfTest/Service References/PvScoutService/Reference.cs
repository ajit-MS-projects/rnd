//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SilverlightWcfTest.PvScoutService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoofType", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public partial class RoofType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayNameField;
        
        private string ImagePathField;
        
        private bool IsDefaultField;
        
        private bool IsSelectedField;
        
        private int RoofTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoofTypeId {
            get {
                return this.RoofTypeIdField;
            }
            set {
                if ((this.RoofTypeIdField.Equals(value) != true)) {
                    this.RoofTypeIdField = value;
                    this.RaisePropertyChanged("RoofTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PvModule", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public partial class PvModule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ArticleNumberField;
        
        private string CellMaterialField;
        
        private string CellTechnologyField;
        
        private string ImagePathField;
        
        private double LeftField;
        
        private double LengthField;
        
        private string ManufacturerIdField;
        
        private string PvScoutArticleNumberField;
        
        private int ThicknessField;
        
        private double TopField;
        
        private float WeightField;
        
        private double WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellMaterial {
            get {
                return this.CellMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.CellMaterialField, value) != true)) {
                    this.CellMaterialField = value;
                    this.RaisePropertyChanged("CellMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellTechnology {
            get {
                return this.CellTechnologyField;
            }
            set {
                if ((object.ReferenceEquals(this.CellTechnologyField, value) != true)) {
                    this.CellTechnologyField = value;
                    this.RaisePropertyChanged("CellTechnology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Left {
            get {
                return this.LeftField;
            }
            set {
                if ((this.LeftField.Equals(value) != true)) {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerIdField, value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PvScoutArticleNumber {
            get {
                return this.PvScoutArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PvScoutArticleNumberField, value) != true)) {
                    this.PvScoutArticleNumberField = value;
                    this.RaisePropertyChanged("PvScoutArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manufacturer", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public partial class Manufacturer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string DescriptionField;
        
        private int ManufIdField;
        
        private string ManufNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufId {
            get {
                return this.ManufIdField;
            }
            set {
                if ((this.ManufIdField.Equals(value) != true)) {
                    this.ManufIdField = value;
                    this.RaisePropertyChanged("ManufId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufName {
            get {
                return this.ManufNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufNameField, value) != true)) {
                    this.ManufNameField = value;
                    this.RaisePropertyChanged("ManufName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRoof", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public partial class BaseRoof : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SilverlightWcfTest.PvScoutService.ConstructionOrientationEnum ConstructionOrientationField;
        
        private double DrawableLengthField;
        
        private double DrawableWidthField;
        
        private double FirstSparrenDistanceField;
        
        private double InterSparrenDistanceField;
        
        private double ModuleDistanceField;
        
        private int ModulesPerColumnField;
        
        private int ModulesPerRowField;
        
        private System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> PvModulesField;
        
        private double RoofHeightField;
        
        private double RoofLengthField;
        
        private double RoofOrientationField;
        
        private double RoofPitchField;
        
        private double RoofWidthField;
        
        private SilverlightWcfTest.PvScoutService.PvModule SelectedPvModuleField;
        
        private SilverlightWcfTest.PvScoutService.RoofType SelectedRoofTypeField;
        
        private double SparrenWidthField;
        
        private System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Sparren> SparrensField;
        
        private double ZoomLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightWcfTest.PvScoutService.ConstructionOrientationEnum ConstructionOrientation {
            get {
                return this.ConstructionOrientationField;
            }
            set {
                if ((this.ConstructionOrientationField.Equals(value) != true)) {
                    this.ConstructionOrientationField = value;
                    this.RaisePropertyChanged("ConstructionOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DrawableLength {
            get {
                return this.DrawableLengthField;
            }
            set {
                if ((this.DrawableLengthField.Equals(value) != true)) {
                    this.DrawableLengthField = value;
                    this.RaisePropertyChanged("DrawableLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DrawableWidth {
            get {
                return this.DrawableWidthField;
            }
            set {
                if ((this.DrawableWidthField.Equals(value) != true)) {
                    this.DrawableWidthField = value;
                    this.RaisePropertyChanged("DrawableWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstSparrenDistance {
            get {
                return this.FirstSparrenDistanceField;
            }
            set {
                if ((this.FirstSparrenDistanceField.Equals(value) != true)) {
                    this.FirstSparrenDistanceField = value;
                    this.RaisePropertyChanged("FirstSparrenDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterSparrenDistance {
            get {
                return this.InterSparrenDistanceField;
            }
            set {
                if ((this.InterSparrenDistanceField.Equals(value) != true)) {
                    this.InterSparrenDistanceField = value;
                    this.RaisePropertyChanged("InterSparrenDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModuleDistance {
            get {
                return this.ModuleDistanceField;
            }
            set {
                if ((this.ModuleDistanceField.Equals(value) != true)) {
                    this.ModuleDistanceField = value;
                    this.RaisePropertyChanged("ModuleDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModulesPerColumn {
            get {
                return this.ModulesPerColumnField;
            }
            set {
                if ((this.ModulesPerColumnField.Equals(value) != true)) {
                    this.ModulesPerColumnField = value;
                    this.RaisePropertyChanged("ModulesPerColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModulesPerRow {
            get {
                return this.ModulesPerRowField;
            }
            set {
                if ((this.ModulesPerRowField.Equals(value) != true)) {
                    this.ModulesPerRowField = value;
                    this.RaisePropertyChanged("ModulesPerRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> PvModules {
            get {
                return this.PvModulesField;
            }
            set {
                if ((object.ReferenceEquals(this.PvModulesField, value) != true)) {
                    this.PvModulesField = value;
                    this.RaisePropertyChanged("PvModules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoofHeight {
            get {
                return this.RoofHeightField;
            }
            set {
                if ((this.RoofHeightField.Equals(value) != true)) {
                    this.RoofHeightField = value;
                    this.RaisePropertyChanged("RoofHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoofLength {
            get {
                return this.RoofLengthField;
            }
            set {
                if ((this.RoofLengthField.Equals(value) != true)) {
                    this.RoofLengthField = value;
                    this.RaisePropertyChanged("RoofLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoofOrientation {
            get {
                return this.RoofOrientationField;
            }
            set {
                if ((this.RoofOrientationField.Equals(value) != true)) {
                    this.RoofOrientationField = value;
                    this.RaisePropertyChanged("RoofOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoofPitch {
            get {
                return this.RoofPitchField;
            }
            set {
                if ((this.RoofPitchField.Equals(value) != true)) {
                    this.RoofPitchField = value;
                    this.RaisePropertyChanged("RoofPitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoofWidth {
            get {
                return this.RoofWidthField;
            }
            set {
                if ((this.RoofWidthField.Equals(value) != true)) {
                    this.RoofWidthField = value;
                    this.RaisePropertyChanged("RoofWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightWcfTest.PvScoutService.PvModule SelectedPvModule {
            get {
                return this.SelectedPvModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedPvModuleField, value) != true)) {
                    this.SelectedPvModuleField = value;
                    this.RaisePropertyChanged("SelectedPvModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightWcfTest.PvScoutService.RoofType SelectedRoofType {
            get {
                return this.SelectedRoofTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedRoofTypeField, value) != true)) {
                    this.SelectedRoofTypeField = value;
                    this.RaisePropertyChanged("SelectedRoofType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SparrenWidth {
            get {
                return this.SparrenWidthField;
            }
            set {
                if ((this.SparrenWidthField.Equals(value) != true)) {
                    this.SparrenWidthField = value;
                    this.RaisePropertyChanged("SparrenWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Sparren> Sparrens {
            get {
                return this.SparrensField;
            }
            set {
                if ((object.ReferenceEquals(this.SparrensField, value) != true)) {
                    this.SparrensField = value;
                    this.RaisePropertyChanged("Sparrens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ZoomLevel {
            get {
                return this.ZoomLevelField;
            }
            set {
                if ((this.ZoomLevelField.Equals(value) != true)) {
                    this.ZoomLevelField = value;
                    this.RaisePropertyChanged("ZoomLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConstructionOrientationEnum", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public enum ConstructionOrientationEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sparrendach = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pfettendach = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sparren", Namespace="http://schemas.datacontract.org/2004/07/Solar.Pvscout.Business.Entity")]
    public partial class Sparren : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LeftField;
        
        private double LeftVirtualField;
        
        private double TopField;
        
        private double TopVirtualField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Left {
            get {
                return this.LeftField;
            }
            set {
                if ((this.LeftField.Equals(value) != true)) {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LeftVirtual {
            get {
                return this.LeftVirtualField;
            }
            set {
                if ((this.LeftVirtualField.Equals(value) != true)) {
                    this.LeftVirtualField = value;
                    this.RaisePropertyChanged("LeftVirtual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TopVirtual {
            get {
                return this.TopVirtualField;
            }
            set {
                if ((this.TopVirtualField.Equals(value) != true)) {
                    this.TopVirtualField = value;
                    this.RaisePropertyChanged("TopVirtual");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PvScoutService.IPvScoutService")]
    public interface IPvScoutService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/Ping", ReplyAction="http://tempuri.org/IPvScoutService/PingResponse")]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        string EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetAllRoofTypes", ReplyAction="http://tempuri.org/IPvScoutService/GetAllRoofTypesResponse")]
        System.IAsyncResult BeginGetAllRoofTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> EndGetAllRoofTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetRoofType", ReplyAction="http://tempuri.org/IPvScoutService/GetRoofTypeResponse")]
        System.IAsyncResult BeginGetRoofType(string roofId, System.AsyncCallback callback, object asyncState);
        
        SilverlightWcfTest.PvScoutService.RoofType EndGetRoofType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetAllPvModules", ReplyAction="http://tempuri.org/IPvScoutService/GetAllPvModulesResponse")]
        System.IAsyncResult BeginGetAllPvModules(string manufacturerId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> EndGetAllPvModules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetManufacturer", ReplyAction="http://tempuri.org/IPvScoutService/GetManufacturerResponse")]
        System.IAsyncResult BeginGetManufacturer(string manufacturerId, System.AsyncCallback callback, object asyncState);
        
        SilverlightWcfTest.PvScoutService.Manufacturer EndGetManufacturer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetAllManufacturers", ReplyAction="http://tempuri.org/IPvScoutService/GetAllManufacturersResponse")]
        System.IAsyncResult BeginGetAllManufacturers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> EndGetAllManufacturers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/GetPvModule", ReplyAction="http://tempuri.org/IPvScoutService/GetPvModuleResponse")]
        System.IAsyncResult BeginGetPvModule(string pvscoutArticleNumber, System.AsyncCallback callback, object asyncState);
        
        SilverlightWcfTest.PvScoutService.PvModule EndGetPvModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/FillRoof", ReplyAction="http://tempuri.org/IPvScoutService/FillRoofResponse")]
        System.IAsyncResult BeginFillRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState);
        
        SilverlightWcfTest.PvScoutService.BaseRoof EndFillRoof(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/DrawRoof", ReplyAction="http://tempuri.org/IPvScoutService/DrawRoofResponse")]
        System.IAsyncResult BeginDrawRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState);
        
        SilverlightWcfTest.PvScoutService.BaseRoof EndDrawRoof(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPvScoutService/VerifyModuleDropPosition", ReplyAction="http://tempuri.org/IPvScoutService/VerifyModuleDropPositionResponse")]
        System.IAsyncResult BeginVerifyModuleDropPosition(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, SilverlightWcfTest.PvScoutService.PvModule movedModule, int newLeft, int newTop, System.AsyncCallback callback, object asyncState);
        
        bool EndVerifyModuleDropPosition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPvScoutServiceChannel : SilverlightWcfTest.PvScoutService.IPvScoutService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRoofTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRoofTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoofTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoofTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightWcfTest.PvScoutService.RoofType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightWcfTest.PvScoutService.RoofType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPvModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPvModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetManufacturerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetManufacturerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightWcfTest.PvScoutService.Manufacturer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightWcfTest.PvScoutService.Manufacturer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllManufacturersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllManufacturersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPvModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPvModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightWcfTest.PvScoutService.PvModule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightWcfTest.PvScoutService.PvModule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FillRoofCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FillRoofCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightWcfTest.PvScoutService.BaseRoof Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightWcfTest.PvScoutService.BaseRoof)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DrawRoofCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DrawRoofCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightWcfTest.PvScoutService.BaseRoof Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightWcfTest.PvScoutService.BaseRoof)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyModuleDropPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyModuleDropPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PvScoutServiceClient : System.ServiceModel.ClientBase<SilverlightWcfTest.PvScoutService.IPvScoutService>, SilverlightWcfTest.PvScoutService.IPvScoutService {
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRoofTypesDelegate;
        
        private EndOperationDelegate onEndGetAllRoofTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRoofTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoofTypeDelegate;
        
        private EndOperationDelegate onEndGetRoofTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoofTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPvModulesDelegate;
        
        private EndOperationDelegate onEndGetAllPvModulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPvModulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetManufacturerDelegate;
        
        private EndOperationDelegate onEndGetManufacturerDelegate;
        
        private System.Threading.SendOrPostCallback onGetManufacturerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllManufacturersDelegate;
        
        private EndOperationDelegate onEndGetAllManufacturersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllManufacturersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPvModuleDelegate;
        
        private EndOperationDelegate onEndGetPvModuleDelegate;
        
        private System.Threading.SendOrPostCallback onGetPvModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginFillRoofDelegate;
        
        private EndOperationDelegate onEndFillRoofDelegate;
        
        private System.Threading.SendOrPostCallback onFillRoofCompletedDelegate;
        
        private BeginOperationDelegate onBeginDrawRoofDelegate;
        
        private EndOperationDelegate onEndDrawRoofDelegate;
        
        private System.Threading.SendOrPostCallback onDrawRoofCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyModuleDropPositionDelegate;
        
        private EndOperationDelegate onEndVerifyModuleDropPositionDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyModuleDropPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PvScoutServiceClient() {
        }
        
        public PvScoutServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PvScoutServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PvScoutServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PvScoutServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PingCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<GetAllRoofTypesCompletedEventArgs> GetAllRoofTypesCompleted;
        
        public event System.EventHandler<GetRoofTypeCompletedEventArgs> GetRoofTypeCompleted;
        
        public event System.EventHandler<GetAllPvModulesCompletedEventArgs> GetAllPvModulesCompleted;
        
        public event System.EventHandler<GetManufacturerCompletedEventArgs> GetManufacturerCompleted;
        
        public event System.EventHandler<GetAllManufacturersCompletedEventArgs> GetAllManufacturersCompleted;
        
        public event System.EventHandler<GetPvModuleCompletedEventArgs> GetPvModuleCompleted;
        
        public event System.EventHandler<FillRoofCompletedEventArgs> FillRoofCompleted;
        
        public event System.EventHandler<DrawRoofCompletedEventArgs> DrawRoofCompleted;
        
        public event System.EventHandler<VerifyModuleDropPositionCompletedEventArgs> VerifyModuleDropPositionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SilverlightWcfTest.PvScoutService.IPvScoutService.EndPing(System.IAsyncResult result) {
            return base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            string retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndPing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new PingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetAllRoofTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRoofTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetAllRoofTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAllRoofTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRoofTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetAllRoofTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAllRoofTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetAllRoofTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRoofTypesCompleted(object state) {
            if ((this.GetAllRoofTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRoofTypesCompleted(this, new GetAllRoofTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRoofTypesAsync() {
            this.GetAllRoofTypesAsync(null);
        }
        
        public void GetAllRoofTypesAsync(object userState) {
            if ((this.onBeginGetAllRoofTypesDelegate == null)) {
                this.onBeginGetAllRoofTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAllRoofTypes);
            }
            if ((this.onEndGetAllRoofTypesDelegate == null)) {
                this.onEndGetAllRoofTypesDelegate = new EndOperationDelegate(this.OnEndGetAllRoofTypes);
            }
            if ((this.onGetAllRoofTypesCompletedDelegate == null)) {
                this.onGetAllRoofTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRoofTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRoofTypesDelegate, null, this.onEndGetAllRoofTypesDelegate, this.onGetAllRoofTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetRoofType(string roofId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoofType(roofId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightWcfTest.PvScoutService.RoofType SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetRoofType(System.IAsyncResult result) {
            return base.Channel.EndGetRoofType(result);
        }
        
        private System.IAsyncResult OnBeginGetRoofType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roofId = ((string)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetRoofType(roofId, callback, asyncState);
        }
        
        private object[] OnEndGetRoofType(System.IAsyncResult result) {
            SilverlightWcfTest.PvScoutService.RoofType retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetRoofType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoofTypeCompleted(object state) {
            if ((this.GetRoofTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoofTypeCompleted(this, new GetRoofTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoofTypeAsync(string roofId) {
            this.GetRoofTypeAsync(roofId, null);
        }
        
        public void GetRoofTypeAsync(string roofId, object userState) {
            if ((this.onBeginGetRoofTypeDelegate == null)) {
                this.onBeginGetRoofTypeDelegate = new BeginOperationDelegate(this.OnBeginGetRoofType);
            }
            if ((this.onEndGetRoofTypeDelegate == null)) {
                this.onEndGetRoofTypeDelegate = new EndOperationDelegate(this.OnEndGetRoofType);
            }
            if ((this.onGetRoofTypeCompletedDelegate == null)) {
                this.onGetRoofTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoofTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoofTypeDelegate, new object[] {
                        roofId}, this.onEndGetRoofTypeDelegate, this.onGetRoofTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetAllPvModules(string manufacturerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPvModules(manufacturerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetAllPvModules(System.IAsyncResult result) {
            return base.Channel.EndGetAllPvModules(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPvModules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string manufacturerId = ((string)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetAllPvModules(manufacturerId, callback, asyncState);
        }
        
        private object[] OnEndGetAllPvModules(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetAllPvModules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPvModulesCompleted(object state) {
            if ((this.GetAllPvModulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPvModulesCompleted(this, new GetAllPvModulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPvModulesAsync(string manufacturerId) {
            this.GetAllPvModulesAsync(manufacturerId, null);
        }
        
        public void GetAllPvModulesAsync(string manufacturerId, object userState) {
            if ((this.onBeginGetAllPvModulesDelegate == null)) {
                this.onBeginGetAllPvModulesDelegate = new BeginOperationDelegate(this.OnBeginGetAllPvModules);
            }
            if ((this.onEndGetAllPvModulesDelegate == null)) {
                this.onEndGetAllPvModulesDelegate = new EndOperationDelegate(this.OnEndGetAllPvModules);
            }
            if ((this.onGetAllPvModulesCompletedDelegate == null)) {
                this.onGetAllPvModulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPvModulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPvModulesDelegate, new object[] {
                        manufacturerId}, this.onEndGetAllPvModulesDelegate, this.onGetAllPvModulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetManufacturer(string manufacturerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetManufacturer(manufacturerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightWcfTest.PvScoutService.Manufacturer SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetManufacturer(System.IAsyncResult result) {
            return base.Channel.EndGetManufacturer(result);
        }
        
        private System.IAsyncResult OnBeginGetManufacturer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string manufacturerId = ((string)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetManufacturer(manufacturerId, callback, asyncState);
        }
        
        private object[] OnEndGetManufacturer(System.IAsyncResult result) {
            SilverlightWcfTest.PvScoutService.Manufacturer retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetManufacturer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetManufacturerCompleted(object state) {
            if ((this.GetManufacturerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetManufacturerCompleted(this, new GetManufacturerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetManufacturerAsync(string manufacturerId) {
            this.GetManufacturerAsync(manufacturerId, null);
        }
        
        public void GetManufacturerAsync(string manufacturerId, object userState) {
            if ((this.onBeginGetManufacturerDelegate == null)) {
                this.onBeginGetManufacturerDelegate = new BeginOperationDelegate(this.OnBeginGetManufacturer);
            }
            if ((this.onEndGetManufacturerDelegate == null)) {
                this.onEndGetManufacturerDelegate = new EndOperationDelegate(this.OnEndGetManufacturer);
            }
            if ((this.onGetManufacturerCompletedDelegate == null)) {
                this.onGetManufacturerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetManufacturerCompleted);
            }
            base.InvokeAsync(this.onBeginGetManufacturerDelegate, new object[] {
                        manufacturerId}, this.onEndGetManufacturerDelegate, this.onGetManufacturerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetAllManufacturers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllManufacturers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetAllManufacturers(System.IAsyncResult result) {
            return base.Channel.EndGetAllManufacturers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllManufacturers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetAllManufacturers(callback, asyncState);
        }
        
        private object[] OnEndGetAllManufacturers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetAllManufacturers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllManufacturersCompleted(object state) {
            if ((this.GetAllManufacturersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllManufacturersCompleted(this, new GetAllManufacturersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllManufacturersAsync() {
            this.GetAllManufacturersAsync(null);
        }
        
        public void GetAllManufacturersAsync(object userState) {
            if ((this.onBeginGetAllManufacturersDelegate == null)) {
                this.onBeginGetAllManufacturersDelegate = new BeginOperationDelegate(this.OnBeginGetAllManufacturers);
            }
            if ((this.onEndGetAllManufacturersDelegate == null)) {
                this.onEndGetAllManufacturersDelegate = new EndOperationDelegate(this.OnEndGetAllManufacturers);
            }
            if ((this.onGetAllManufacturersCompletedDelegate == null)) {
                this.onGetAllManufacturersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllManufacturersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllManufacturersDelegate, null, this.onEndGetAllManufacturersDelegate, this.onGetAllManufacturersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginGetPvModule(string pvscoutArticleNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPvModule(pvscoutArticleNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightWcfTest.PvScoutService.PvModule SilverlightWcfTest.PvScoutService.IPvScoutService.EndGetPvModule(System.IAsyncResult result) {
            return base.Channel.EndGetPvModule(result);
        }
        
        private System.IAsyncResult OnBeginGetPvModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pvscoutArticleNumber = ((string)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginGetPvModule(pvscoutArticleNumber, callback, asyncState);
        }
        
        private object[] OnEndGetPvModule(System.IAsyncResult result) {
            SilverlightWcfTest.PvScoutService.PvModule retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndGetPvModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPvModuleCompleted(object state) {
            if ((this.GetPvModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPvModuleCompleted(this, new GetPvModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPvModuleAsync(string pvscoutArticleNumber) {
            this.GetPvModuleAsync(pvscoutArticleNumber, null);
        }
        
        public void GetPvModuleAsync(string pvscoutArticleNumber, object userState) {
            if ((this.onBeginGetPvModuleDelegate == null)) {
                this.onBeginGetPvModuleDelegate = new BeginOperationDelegate(this.OnBeginGetPvModule);
            }
            if ((this.onEndGetPvModuleDelegate == null)) {
                this.onEndGetPvModuleDelegate = new EndOperationDelegate(this.OnEndGetPvModule);
            }
            if ((this.onGetPvModuleCompletedDelegate == null)) {
                this.onGetPvModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPvModuleCompleted);
            }
            base.InvokeAsync(this.onBeginGetPvModuleDelegate, new object[] {
                        pvscoutArticleNumber}, this.onEndGetPvModuleDelegate, this.onGetPvModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginFillRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFillRoof(objRoof, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightWcfTest.PvScoutService.BaseRoof SilverlightWcfTest.PvScoutService.IPvScoutService.EndFillRoof(System.IAsyncResult result) {
            return base.Channel.EndFillRoof(result);
        }
        
        private System.IAsyncResult OnBeginFillRoof(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightWcfTest.PvScoutService.BaseRoof objRoof = ((SilverlightWcfTest.PvScoutService.BaseRoof)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginFillRoof(objRoof, callback, asyncState);
        }
        
        private object[] OnEndFillRoof(System.IAsyncResult result) {
            SilverlightWcfTest.PvScoutService.BaseRoof retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndFillRoof(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFillRoofCompleted(object state) {
            if ((this.FillRoofCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FillRoofCompleted(this, new FillRoofCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FillRoofAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof) {
            this.FillRoofAsync(objRoof, null);
        }
        
        public void FillRoofAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, object userState) {
            if ((this.onBeginFillRoofDelegate == null)) {
                this.onBeginFillRoofDelegate = new BeginOperationDelegate(this.OnBeginFillRoof);
            }
            if ((this.onEndFillRoofDelegate == null)) {
                this.onEndFillRoofDelegate = new EndOperationDelegate(this.OnEndFillRoof);
            }
            if ((this.onFillRoofCompletedDelegate == null)) {
                this.onFillRoofCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillRoofCompleted);
            }
            base.InvokeAsync(this.onBeginFillRoofDelegate, new object[] {
                        objRoof}, this.onEndFillRoofDelegate, this.onFillRoofCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginDrawRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDrawRoof(objRoof, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightWcfTest.PvScoutService.BaseRoof SilverlightWcfTest.PvScoutService.IPvScoutService.EndDrawRoof(System.IAsyncResult result) {
            return base.Channel.EndDrawRoof(result);
        }
        
        private System.IAsyncResult OnBeginDrawRoof(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightWcfTest.PvScoutService.BaseRoof objRoof = ((SilverlightWcfTest.PvScoutService.BaseRoof)(inValues[0]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginDrawRoof(objRoof, callback, asyncState);
        }
        
        private object[] OnEndDrawRoof(System.IAsyncResult result) {
            SilverlightWcfTest.PvScoutService.BaseRoof retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndDrawRoof(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDrawRoofCompleted(object state) {
            if ((this.DrawRoofCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DrawRoofCompleted(this, new DrawRoofCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DrawRoofAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof) {
            this.DrawRoofAsync(objRoof, null);
        }
        
        public void DrawRoofAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, object userState) {
            if ((this.onBeginDrawRoofDelegate == null)) {
                this.onBeginDrawRoofDelegate = new BeginOperationDelegate(this.OnBeginDrawRoof);
            }
            if ((this.onEndDrawRoofDelegate == null)) {
                this.onEndDrawRoofDelegate = new EndOperationDelegate(this.OnEndDrawRoof);
            }
            if ((this.onDrawRoofCompletedDelegate == null)) {
                this.onDrawRoofCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDrawRoofCompleted);
            }
            base.InvokeAsync(this.onBeginDrawRoofDelegate, new object[] {
                        objRoof}, this.onEndDrawRoofDelegate, this.onDrawRoofCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightWcfTest.PvScoutService.IPvScoutService.BeginVerifyModuleDropPosition(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, SilverlightWcfTest.PvScoutService.PvModule movedModule, int newLeft, int newTop, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyModuleDropPosition(objRoof, movedModule, newLeft, newTop, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightWcfTest.PvScoutService.IPvScoutService.EndVerifyModuleDropPosition(System.IAsyncResult result) {
            return base.Channel.EndVerifyModuleDropPosition(result);
        }
        
        private System.IAsyncResult OnBeginVerifyModuleDropPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightWcfTest.PvScoutService.BaseRoof objRoof = ((SilverlightWcfTest.PvScoutService.BaseRoof)(inValues[0]));
            SilverlightWcfTest.PvScoutService.PvModule movedModule = ((SilverlightWcfTest.PvScoutService.PvModule)(inValues[1]));
            int newLeft = ((int)(inValues[2]));
            int newTop = ((int)(inValues[3]));
            return ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).BeginVerifyModuleDropPosition(objRoof, movedModule, newLeft, newTop, callback, asyncState);
        }
        
        private object[] OnEndVerifyModuleDropPosition(System.IAsyncResult result) {
            bool retVal = ((SilverlightWcfTest.PvScoutService.IPvScoutService)(this)).EndVerifyModuleDropPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyModuleDropPositionCompleted(object state) {
            if ((this.VerifyModuleDropPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyModuleDropPositionCompleted(this, new VerifyModuleDropPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyModuleDropPositionAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, SilverlightWcfTest.PvScoutService.PvModule movedModule, int newLeft, int newTop) {
            this.VerifyModuleDropPositionAsync(objRoof, movedModule, newLeft, newTop, null);
        }
        
        public void VerifyModuleDropPositionAsync(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, SilverlightWcfTest.PvScoutService.PvModule movedModule, int newLeft, int newTop, object userState) {
            if ((this.onBeginVerifyModuleDropPositionDelegate == null)) {
                this.onBeginVerifyModuleDropPositionDelegate = new BeginOperationDelegate(this.OnBeginVerifyModuleDropPosition);
            }
            if ((this.onEndVerifyModuleDropPositionDelegate == null)) {
                this.onEndVerifyModuleDropPositionDelegate = new EndOperationDelegate(this.OnEndVerifyModuleDropPosition);
            }
            if ((this.onVerifyModuleDropPositionCompletedDelegate == null)) {
                this.onVerifyModuleDropPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyModuleDropPositionCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyModuleDropPositionDelegate, new object[] {
                        objRoof,
                        movedModule,
                        newLeft,
                        newTop}, this.onEndVerifyModuleDropPositionDelegate, this.onVerifyModuleDropPositionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightWcfTest.PvScoutService.IPvScoutService CreateChannel() {
            return new PvScoutServiceClientChannel(this);
        }
        
        private class PvScoutServiceClientChannel : ChannelBase<SilverlightWcfTest.PvScoutService.IPvScoutService>, SilverlightWcfTest.PvScoutService.IPvScoutService {
            
            public PvScoutServiceClientChannel(System.ServiceModel.ClientBase<SilverlightWcfTest.PvScoutService.IPvScoutService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Ping", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPing(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Ping", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllRoofTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllRoofTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> EndGetAllRoofTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.RoofType>)(base.EndInvoke("GetAllRoofTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoofType(string roofId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roofId;
                System.IAsyncResult _result = base.BeginInvoke("GetRoofType", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightWcfTest.PvScoutService.RoofType EndGetRoofType(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightWcfTest.PvScoutService.RoofType _result = ((SilverlightWcfTest.PvScoutService.RoofType)(base.EndInvoke("GetRoofType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllPvModules(string manufacturerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = manufacturerId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllPvModules", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> EndGetAllPvModules(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.PvModule>)(base.EndInvoke("GetAllPvModules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetManufacturer(string manufacturerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = manufacturerId;
                System.IAsyncResult _result = base.BeginInvoke("GetManufacturer", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightWcfTest.PvScoutService.Manufacturer EndGetManufacturer(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightWcfTest.PvScoutService.Manufacturer _result = ((SilverlightWcfTest.PvScoutService.Manufacturer)(base.EndInvoke("GetManufacturer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllManufacturers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllManufacturers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> EndGetAllManufacturers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightWcfTest.PvScoutService.Manufacturer>)(base.EndInvoke("GetAllManufacturers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPvModule(string pvscoutArticleNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pvscoutArticleNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetPvModule", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightWcfTest.PvScoutService.PvModule EndGetPvModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightWcfTest.PvScoutService.PvModule _result = ((SilverlightWcfTest.PvScoutService.PvModule)(base.EndInvoke("GetPvModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFillRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objRoof;
                System.IAsyncResult _result = base.BeginInvoke("FillRoof", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightWcfTest.PvScoutService.BaseRoof EndFillRoof(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightWcfTest.PvScoutService.BaseRoof _result = ((SilverlightWcfTest.PvScoutService.BaseRoof)(base.EndInvoke("FillRoof", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDrawRoof(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = objRoof;
                System.IAsyncResult _result = base.BeginInvoke("DrawRoof", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightWcfTest.PvScoutService.BaseRoof EndDrawRoof(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightWcfTest.PvScoutService.BaseRoof _result = ((SilverlightWcfTest.PvScoutService.BaseRoof)(base.EndInvoke("DrawRoof", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVerifyModuleDropPosition(SilverlightWcfTest.PvScoutService.BaseRoof objRoof, SilverlightWcfTest.PvScoutService.PvModule movedModule, int newLeft, int newTop, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = objRoof;
                _args[1] = movedModule;
                _args[2] = newLeft;
                _args[3] = newTop;
                System.IAsyncResult _result = base.BeginInvoke("VerifyModuleDropPosition", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndVerifyModuleDropPosition(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("VerifyModuleDropPosition", _args, result)));
                return _result;
            }
        }
    }
}
