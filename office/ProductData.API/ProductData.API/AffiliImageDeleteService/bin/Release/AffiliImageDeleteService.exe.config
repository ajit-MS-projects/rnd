<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral" />
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral" />
	</configSections>
	<loggingConfiguration name="Logging Application Block" tracingEnabled="true"
	  defaultCategory="Debug" logWarningsWhenNoCategoriesMatch="true">
		<listeners>
			<add toAddress="achahal@affili.net;fNowothnick@affili.net;sjindal@affili.net"
			  fromAddress="ImageDeleteService@affili.net" subjectLineStarter=""
			  subjectLineEnder="Product Import: Program in third case" smtpServer="smtp.dc.local"
			  smtpPort="25" formatter="TextFormatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.EmailTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.EmailTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="Email TraceListener" />
			<add source="Affili.ImageDelete.WinService.Log" formatter="TextFormatter"
			  log="Application" machineName="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="Formatted EventLog TraceListener" />
			<add listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  traceOutputOptions="None" filter="All" type="Affilinet.Utility.Logging.DBTraceListener, Affilinet.Utility.Logging, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
			  name="ReportTraceListener" initializeData="" formatter="Report" />
			<add fileName="d:\Autoimport\Affili.ImageDelete.Debug.Trace.Log" footer="&lt;br/&gt;----------------------------------------&lt;br/&gt;"
			  formatter="TextFormatter" header="----------------------------------------"
			  rollFileExistsBehavior="Increment" rollInterval="Midnight" rollSizeKB="5120"
			  timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="Rolling Flat File Trace Listener" />
			<add fileName="d:\Autoimport\Affili.ImageDelete.Log.XML" footer="&lt;/LogEntry&gt;"
			  formatter="XMLFormatter" header="&lt;LogEntry&gt;" rollFileExistsBehavior="Increment"
			  rollInterval="Midnight" rollSizeKB="1024" timeStampPattern="yyyy-MM-dd"
			  listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="Rolling XML Trace Listener" />
		</listeners>
		<formatters>
			<add template="Timestamp: {timestamp}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;&#xA;Priority: {priority}&#xD;&#xA;EventId: {eventid}&#xD;&#xA;Severity: {severity}&#xD;&#xA;Title:{title}&#xD;&#xA;Machine: {machine}&#xD;&#xA;Application Domain: {appDomain}&#xD;&#xA;Process Id: {processId}&#xD;&#xA;Process Name: {processName}&#xD;&#xA;Win32 Thread Id: {win32ThreadId}&#xD;&#xA;Thread Name: {threadName}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}&#xD;&#xA;)}"
			  type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="Report" />
			<add template="Timestamp:  {timestamp(local)}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;&#xA;Priority: {priority}&#xD;&#xA;EventId: {eventid}&#xD;&#xA;Severity: {severity}&#xD;&#xA;Title:{title}&#xD;&#xA;Machine: {machine}&#xD;&#xA;Application Domain: {appDomain}&#xD;&#xA;Process Id: {processId}&#xD;&#xA;Process Name: {processName}&#xD;&#xA;Win32 Thread Id: {win32ThreadId}&#xD;&#xA;Thread Name: {threadName}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}&#xD;&#xA;)}"
			  type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="TextFormatter" />
			<add template="&lt;Timestamp&gt; {timestamp(local)}&lt;/Timestamp&gt;&#xD;&#xA;&lt;Message&gt;{message}&lt;/Message&gt;&#xD;&#xA;&lt;Category&gt;{category}&lt;/Category&gt;&#xD;&#xA;&lt;Priority&gt;{priority}&lt;/Priority&gt;&#xD;&#xA;&lt;EventId&gt;{eventid}&lt;/EventId&gt;&#xD;&#xA;&lt;Severity&gt;{severity}&lt;/Severity&gt;&#xD;&#xA;&lt;Title&gt;{title}&lt;/Title&gt;&#xD;&#xA;&lt;Machine&gt;{machine}&lt;/Machine&gt;&#xD;&#xA;&lt;ApplicationDomain&gt;{appDomain}&lt;/ApplicationDomain&gt;&#xD;&#xA;&lt;ProcessId&gt;{processId}&lt;/ProcessId&gt;&#xD;&#xA;&lt;ProcessName&gt;{processName}&lt;/ProcessName&gt;&#xD;&#xA;&lt;Win32ThreadId&gt;{win32ThreadId}&lt;/Win32ThreadId&gt;&#xD;&#xA;&lt;ThreadName&gt;{threadName}&lt;/ThreadName&gt;&#xD;&#xA;&lt;ExtendedProperties&gt;{dictionary({key}-{value})}&lt;/ExtendedProperties&gt;"
			  type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral"
			  name="XMLFormatter" />
		</formatters>
		<categorySources>
			<add switchValue="All" name="Critical">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
			<add switchValue="All" name="Debug">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
			<add switchValue="All" name="Email">
				<listeners>
					<add name="Email TraceListener" />
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
			<add switchValue="All" name="Error">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
			<add switchValue="All" name="Information">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
			<add switchValue="All" name="Report">
				<listeners>
					<add name="ReportTraceListener" />
				</listeners>
			</add>
			<add switchValue="All" name="Warning">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</add>
		</categorySources>
		<specialSources>
			<allEvents switchValue="All" name="All Events" />
			<notProcessed switchValue="All" name="Unprocessed Category">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</notProcessed>
			<errors switchValue="All" name="Logging Errors &amp; Warnings">
				<listeners>
					<add name="Rolling Flat File Trace Listener" />
				</listeners>
			</errors>
		</specialSources>
	</loggingConfiguration>
	<connectionStrings>
		<!--Dev:ebes06 :: Staging:172.16.51.70 :: Live:172.16.51.20-->
		<!--Main ProductDB Connection-->
		<add name="ProductData" connectionString="Persist Security Info=False;server=ebes06;database=ProductExportDB;User ID=ProductASP;pwd=psatcudorp;" providerName="System.Data.SqlClient" />

		<!--needs a new connection string for SSIS, but points to the main DB-->
		<add name="ProductSSIS" connectionString="Persist Security Info=False;server=ebes06;database=ProductExportDB;User ID=ProductASP;pwd=psatcudorp;Provider=SQLNCLI.1;" providerName="System.Data.SqlClient" />
	</connectionStrings>
	<appSettings>
		
		<!--Used in case of CSV date values -->
		<add key="DefDateFormat" value="dd-mm-yyyy" />

		<!--Maximum date that is supported in our system-->
		<add key="MaxDateYear" value="2079" />

		<!--If set to true DB commands will work only if DB server name matches to DbServerName config entry or else application will hang fore ever -->
		<add key="IsDbServerNameDependencyEnabled" value="0" />

		<!--Name of the DB server from where data fetch and save is allowed-->
		<add key="DbServerName" value="EBES06" />

		<!--Files containing time stamp of last access will be created in this Folder-->
		<add key="WinServiceHeathCheckFilePath" value="d:\Autoimport\"/>
		
		
		
		<!--ImageDeleteService-->
		<!--24 hour format only, This is the time when delete from FileSystem timer will start-->
		<add key="ImageDeleteFromFsStartTime" value="8:00" />
		<!--24 hour format only, This is the time when delete from FileSystem timer will end-->
		<add key="ImageDeleteFromFsEndTime" value="23:30" />

		<!--24 hour format only, This is the time when delete from DB timer will start-->
		<add key="ImageDeleteFromDbStartTime" value="0:00" />
		<!--24 hour format only, This is the time when delete from DB timer will end-->
		<add key="ImageDeleteFromDbEndTime" value="02:00" />

		<!--Milliseconds defined for the timer of the Windows Service; for delete from the file system-->
		<add key="ImageDeleteFromFsTimeInervalInMilliSecs" value="1000" />
		<!--Milliseconds defined for the timer of the Windows Service; for delete from the db-->
		<add key="ImageDeleteFromDbTimeInervalInMilliSecs" value="1000" />

		<!--Default location where the Sanitized images CSV's are moved used both projects-->
		<add key="ImgCsvSaveLocation" value="d:\ProdImageCsv\files\" />
		
		<!--SSIS ImageImport Package location; here should be all ImageImport update, delete, broken packages -->
		<add key="ImageImportSsisFolder" value="d:\WinServices\ImageImportSsisMgmtServices\PI.ImageImport.dtsx" />
		
		<!-- Counter for broken Images, number of trails to get the image from advertiser. if the number is reached the image will be deleted. default 3 -->
		<add key="MaxBrokenCounter" value="3" />
		<!-- No of images to delete from file system, after which check if admin has requested abort-->
		<add key="CheckAbortAfterImagesToDelete" value="1000" />
		
		<!--ImageDeleteService end-->
	</appSettings>
</configuration>