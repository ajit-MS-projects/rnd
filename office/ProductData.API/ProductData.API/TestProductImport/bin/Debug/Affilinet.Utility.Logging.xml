<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Affilinet.Utility.Logging</name>
    </assembly>
    <members>
        <member name="T:Affilinet.Utility.Logging.ReportLog">
            <summary>
            Entiry class used to create create reporting logs, stored in DB
            </summary>
        </member>
        <member name="P:Affilinet.Utility.Logging.ReportLog.Id">
            <summary>
            Gets or sets the unique id such as product program id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.ReportLog.SystemListId">
            <summary>
            Gets or sets the System list id for multilingual support.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.ReportLog.Value">
            <summary>
            Gets or sets the value of property to log.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.ReportLog.ListEnum">
            <summary>
            Gets or sets the enum value.
            </summary>
            <value>The application.</value>
        </member>
        <member name="T:Affilinet.Utility.Logging.LoggingInfo">
            <summary>
            Class is an entity and represents log entry instance.
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.LoggingInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Affilinet.Utility.Logging.LoggingInfo"/> class.
            </summary>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.SpName">
            <summary>
            Gets or sets the name of the sp.
            </summary>
            <value>The name of the sp.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.EventId">
            <summary>
            Gets or sets the event id.
            </summary>
            <value>The event id.</value>
        </member>
        <member name="P:Affilinet.Utility.Logging.LoggingInfo.ExceptionObject">
            <summary>
            Gets or sets the exception object.
            </summary>
            <value>The exception object.</value>
        </member>
        <member name="T:Affilinet.Utility.Logging.DBTraceListener">
            <summary>
            Custome trace listner, it creates log entries into reportLog table
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.DBTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace information, a data object and event information to report log table.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The trace data to emit.</param>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="T:Affilinet.Utility.Logging.DAO.LogDAO">
            <summary>
            Represents data access object for Product abstraction.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.DAO.LogDAO._loggingDBdatabase">
            <summary>
            Refers to Live product DB
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.DAO.LogDAO.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Affilinet.Utility.Logging.DAO.LogDAO"/> class.
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.DAO.LogDAO.CreateReportLog(System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Create a log entry for reporting.
            </summary>
            <param name="commit">if set to <c>true</c> [commit].</param>
            <param name="id">The id.</param>
            <param name="systemListId">The system list id.</param>
            <param name="value">The value.</param>
            <param name="listEnum">The list enum.</param>
        </member>
        <member name="M:Affilinet.Utility.Logging.DAO.LogDAO.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Affilinet.Utility.Logging.DAO.LogDAO.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            It also suppresses finalization
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.DAO.LogDAO.Finalize">
            <summary>
            Finalizes this instance, if dispose is not called explicitly
            </summary>
        </member>
        <member name="T:Affilinet.Utility.Logging.Constants">
            <summary>
             Class to contain all constants, categorised in inner structures.
            </summary>
        </member>
        <member name="T:Affilinet.Utility.Logging.Constants.LogCategories">
            <summary>
            Provides a list of log types (must be defined in configuration).
            </summary>
        </member>
        <member name="T:Affilinet.Utility.Logging.GenericLogger">
            <summary>
            Common implementation for creating log entries. It is an interface over MS Looging block, and allows various log destinations using config file.
            </summary>
        </member>
        <member name="T:Affilinet.Utility.Logging.BaseLogger">
            <summary>
            Abstract Base class for all logging implementations.
            Change History: Version;Date;Changed by;Change description
            1.0;15-Feb-2009;Ajit Chahal;-
            </summary>
        </member>
        <member name="M:Affilinet.Utility.Logging.BaseLogger.CreateLog(Affilinet.Utility.Logging.LoggingInfo,Affilinet.Utility.Logging.LoggingCategoriesEnum)">
            <summary>
            Methods uses MS Enterprise libray's logger object to generate Log.
            </summary>
            <param name="objLoggingInfo">Object of Logging info to store various log parameters.</param>
            <param name="loggingCategory">One of the log categories defined in configuration file.</param>
        </member>
        <member name="M:Affilinet.Utility.Logging.BaseLogger.CreateReportLog(System.Collections.Generic.List{Affilinet.Utility.Logging.ReportLog})">
            <summary>
            Creates the report log.
            </summary>
            <param name="ReportLogs">The report logs.</param>
        </member>
        <member name="M:Affilinet.Utility.Logging.GenericLogger.CreateLog(Affilinet.Utility.Logging.LoggingInfo,Affilinet.Utility.Logging.LoggingCategoriesEnum)">
            <summary>
            Methods uses MS Enterprise libray's logger object to generate Log.
            </summary>
            <param name="objLoggingInfo">Object of Logging info to store various log parameters.</param>
            <param name="loggingLevel">One of the log categories defined in configuration file.</param>
        </member>
        <member name="M:Affilinet.Utility.Logging.GenericLogger.SetupLoggingInfoObject(Affilinet.Utility.Logging.LoggingInfo,System.Int32,System.Diagnostics.TraceEventType)">
            <summary>
            Sets up common properties of LoggingInfo object.
            </summary>
            <param name="objLoggingInfo"></param>
            <param name="priority"></param>
            <param name="severity"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Affilinet.Utility.Logging.GenericLogger.WriteToLog(Affilinet.Utility.Logging.LoggingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:Affilinet.Utility.Logging.GenericLogger.GetExceptionStackTrace(Affilinet.Utility.Logging.LoggingInfo)" -->
        <member name="T:Affilinet.Utility.Logging.LoggingCategoriesEnum">
            <summary>
            Enum designating log types.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.Debug">
            <summary>
            Debug log category
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.CustomException">
            <summary>
            Represents a custom exception raised in code.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.SystemException">
            <summary>
            Represents a system exception.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.Information">
            <summary>
            Information Log.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.Warning">
            <summary>
            Warning Log.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.Report">
            <summary>
            Log entries used to generate reports.
            </summary>
        </member>
        <member name="F:Affilinet.Utility.Logging.LoggingCategoriesEnum.Email">
            <summary>
            Log entries to be send as an email
            </summary>
        </member>
    </members>
</doc>
